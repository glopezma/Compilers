def f(x:int, y:bool) : int {   // -+ x and y go into scope
      let z = ref x in             // -+ z goes into scope
      {                            //  |
        let w = !z in              // ---+ w goes into scope
        z := w + 1                 //  | |
      };                           // ---+ w goes out of scope
      !z + 1                       //  |
    }                              // -+ x,y, and z go out of scope
    f(3, false)

 def g(x:int, y:bool) : int {   // -+ x and y go into scope
      let z = ref x in             // -+ z goes into scope
      {                            //  |
        let w = !z in              // ---+ w goes into scope
        z := w + 1                 //  | |
      };                           // ---+ w goes out of scope
      w + 1                        //  |   ERROR! w not in scope 
    }                              // -+ x,y, and z go out of scope
    g(3, false)
